library(jsonlite)
library(text2vec)
library(tidyverse)
library(rjson)
library(tidytext)
library(tm)
library(data.table)
library(wordcloud)
library(topicmodels)
library(quanteda)
library(caret)
library(irlba)
library(randomForest)
library(doSNOW)

load_json <- function(filename){
  js <- read_json(filename)
  data.table(id =sapply(js,'[[','id'),
             cuisine = sapply(js,'[[','cuisine'),
             ingredients =sapply(js,'[[','ingredients'))
}  
train <- load_json("train.json")
test <- load_json("test.json")

head(train.tokens,2)
nrow(train)

#CLEANING THE DATA
train$ingredients <- paste(train$ingredients,sep = ",")
train$ingredients <- gsub("list\\(","",train$ingredients)
train$ingredients <- gsub("c\\(","",train$ingredients)
train$ingredients <- gsub("\\)","",train$ingredients)
train$ingredients <- gsub('\"',"",train$ingredients)
train$ingredients <- gsub('\\\\',"",train$ingredients)

text.clean <- function(x){
  x <- tokens(x, what = "word",
              remove_numbers = T, remove_punct = T,
              remove_symbols = T,remove_hyphens = T)
  x <- tokens_tolower(x)
  x <- tokens_select(x,stopwords(),selection = "remove")
  #x <- tokens_wordstem(x,language = "english")
}
train.tokens <- text.clean(train$ingredients)

#to  a document matrix
train.tokens.dfm <- as.matrix(dfm(train.tokens,tolower = F))

#checking of the rows are still the same the binding 
dim(train.tokens.dfm)
train.tokens.dfm <- cbind(cuisine = train$cuisine,as.data.frame(train.tokens.dfm))
head(train.tokens.dfm,2)

#cross validation 
cv.folds <- createMultiFolds(train.tokens.dfm$cuisine, k=4, times = 3)
cv.cntrl <- trainControl(method = "repeatedcv" , number = 4, repeats = 3,
                         index= cv.folds)
start.time <- Sys.time()
#create a cluste to work on 10 logiCALL CORES
cl <- makeCluster(1,type = "SOCK")
registerDoSNOW(cl)
rpart.cv.1 <- train(cuisine ~ .,data = train.tokens.dfm, method = "rpart",
                    trControl = cv.cntrl, tunneLength = 7)
#stop cluster
stopCluster(cl)
#total time
total.time <- Sys.time() - start.time
#results
rpart.cv.1


